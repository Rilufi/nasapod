name: Nasobot

on: push

  #schedule:
 #   - cron: '0 10 * * *'


jobs:
  tweet:
    name: APOD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõé
        uses: actions/checkout@v3

      - name: Keep this repo alive
        uses: gautamkrishnar/keepalive-workflow@master

      - name: Set up Python üêç
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Cache Python packages üíæ
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install packages ‚öô
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check if instagram_session exists
        id: session-check
        run: echo "::set-output name=exists::$(if [ -f instagram_session.json ]; then echo 'true'; else echo 'false'; fi)"

      - name: Download Instagram Session
        if: steps.session-check.outputs.exists == 'true'
        uses: actions/download-artifact@v3
        with:
          name: instagram_session
          path: .

      - name: Create empty session file if not exists
        if: steps.session-check.outputs.exists == 'false'
        run: echo '{}' > instagram_session.json

      - name: tweet and insta APOD üê¶üì∑
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          API_KEY: ${{ secrets.API_KEY }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          TELE_USER: ${{ secrets.TELE_USER }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          GOOGLE_API_KEY:  ${{ secrets.GOOGLE_API_KEY }}
          BSKY_HANDLE:  ${{ secrets.BSKY_HANDLE }}          
          BSKY_PASSWORD:  ${{ secrets.BSKY_PASSWORD }}
        run: python nasapod.py

      - name: Upload Instagram Session
        uses: actions/upload-artifact@v3
        with:
          name: instagram_session
          path: instagram_session.json

      - name: Atualizar arquivo de legenda
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          git add legendas_postadas.txt
          git commit -m "Atualizar arquivo de legenda [skip ci]"  # Ignorar a execu√ß√£o do workflow para este commit
          git push
